
# 1.a Modular Arithmetic

def modular_arithmetic():
    """
    Задачи, связанные с операциями по модулю (остаток от деления).
    """

    print("1.a Модульные операции:")

    # 1) 13 mod 5
    print("1) 13 mod 5 =", 13 % 5)  # Ожидаемый результат: 3

    # 2) −1 mod 12
    print("2) -1 mod 12 =", (-1 % 12))  # Ожидаемый результат: 11

    # 3) 118 mod 5
    print("3) 118 mod 5 =", 118 % 5)  # Ожидаемый результат: 3

    # 4) −135 mod 7
    print("4) -135 mod 7 =", (-135 % 7))  # Ожидаемый результат: 5

    # 5) (6n + 1) mod 3
    # Для этого примера мы считаем остаток от (6 * n + 1) по модулю 3.
    # Поскольку 6 * n mod 3 всегда дает 0, результат будет 1.
    print("5) (6n + 1) mod 3 =", (6 * 1 + 1) % 3)  # Ожидаемый результат: 1

    # 6) (12n^4 + 9n^2 + 1) mod 3
    # Упрощаем выражение по модулю 3 для n = 1.
    print("6) (12n^4 + 9n^2 + 1) mod 3 =", (12 * 1**4 + 9 * 1**2 + 1) % 3)  # Ожидаемый результат: 1

    # 7) (5n^2 + 3n − 1) mod n
    # Это выражение дает -1 mod n, то есть всегда n-1, для n = 1 будет 0.
    print("7) (5n^2 + 3n − 1) mod n =", (5 * 1**2 + 3 * 1 - 1) % 1)  # Ожидаемый результат: 0

    # 8) (113 + 61) mod 5
    print("8) (113 + 61) mod 5 =", (113 + 61) % 5)  # Ожидаемый результат: 4

    # 9) (182 − 423) mod 6
    print("9) (182 − 423) mod 6 =", (-241 % 6))  # Ожидаемый результат: 5

    # 10) (7 * 8) mod 7
    print("10) (7 * 8) mod 7 =", (7 * 8) % 7)  # Ожидаемый результат: 0

    # 11) (30 * 19) mod 7
    print("11) (30 * 19) mod 7 =", (30 * 19) % 7)  # Ожидаемый результат: 3

    # 12) (6 * 6) mod 7
    print("12) (6 * 6) mod 7 =", (6 * 6) % 7)  # Ожидаемый результат: 1


# 1.b Euler's Totient Function

def euler_totient():
    """
    Задачи, связанные с вычислением функции Эйлера для различных чисел.
    Функция Эйлера φ(n) = n * (1 - 1/p1) * (1 - 1/p2) * ... * (1 - 1/pk), где p1, p2, ..., pk - простые делители числа n.
    """

    print("\n1.b Функция Эйлера:")

    # 1) φ(10)
    # Простые делители 10 - это 2 и 5.
    # φ(10) = 10 * (1 - 1/2) * (1 - 1/5) = 4
    print("1) φ(10) =", 10 * (1 - 1/2) * (1 - 1/5))  # Ожидаемый результат: 4

    # 2) φ(41)
    # 41 - простое число, значит φ(41) = 41 - 1 = 40
    print("2) φ(41) =", 41 - 1)  # Ожидаемый результат: 40

    # 3) φ(42)
    # Простые делители 42 - это 2, 3 и 7.
    # φ(42) = 42 * (1 - 1/2) * (1 - 1/3) * (1 - 1/7) = 12
    print("3) φ(42) =", 42 * (1 - 1/2) * (1 - 1/3) * (1 - 1/7))  # Ожидаемый результат: 12

    # 4) φ(2^3 * 7)
    # Применяем формулу Эйлера для составных чисел.
    # φ(2^3 * 7) = φ(2^3) * φ(7)
    # φ(2^3) = 4, φ(7) = 6, φ(2^3 * 7) = 4 * 6 = 24
    print("4) φ(2^3 * 7) =", 4 * 6)  # Ожидаемый результат: 24

    # 5) φ(2^10)
    # φ(2^10) = 1024 * (1 - 1/2) = 512
    print("5) φ(2^10) =", 1024 * (1 - 1/2))  # Ожидаемый результат: 512

    # 6) φ(2^3 * 3^8 * 5 * 7^2)
    # Применяем формулу Эйлера для составных чисел.
    # φ(2^3 * 3^8 * 5 * 7^2) = φ(2^3) * φ(3^8) * φ(5) * φ(7^2)
    # φ(2^3) = 4, φ(3^8) = 4374, φ(5) = 4, φ(7^2) = 42
    # φ(2^3 * 3^8 * 5 * 7^2) = 4 * 4374 * 4 * 42 = 245376
    print("6) φ(2^3 * 3^8 * 5 * 7^2) =", 4 * 4374 * 4 * 42)  # Ожидаемый результат: 245376


if __name__ == "__main__":
    # Вызов функций для выполнения задач
    modular_arithmetic()
    euler_totient()

